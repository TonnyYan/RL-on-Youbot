#include <fstream>
#include <iostream>
#include <string>
#include <ctime>
#include<string>
#include<vector>
#include <sstream>
using namespace std;

string adresseTexte ="donnees_points.txt";
string adresseSortie="donnees_points_final.txt";

double string_to_double( const std::string& s )
{
    std::istringstream i(s);
    double x;
    if (!(i >> x))
        return 0;
    return x;
}

void creationTabDonnees()
{const int taille = 1000;
const int tailleLignesVides = 2;
std::array<std::array<int, taille>, 4>  ref_points;
    string ligne;
    string nb="";
    double valeur[4];

    ifstream fichier(adresseTexte.c_str(), ios::in);
    if(fichier)
    {
        int compteur=0;
        //ouverture ligna à ligne
        for(int i =0; i<taille+tailleLignesVides; i++)
        {
            (getline(fichier,ligne));
            //si pas une ligne Enregistrement du ...
            if(ligne[0]!=69)
            {

                for(int i =0; i<5; i++)
                {
                    nb=nb+ligne[i];
                }
                valeur[0]=string_to_double(nb);
                nb="";

                for(int i =6; i<10; i++)
                {
                    nb=nb+ligne[i];
                }
                valeur[1]=string_to_double(nb);
                nb="";

                for(int i =12; i<16; i++)
                {
                    nb=nb+ligne[i];
                }
                valeur[2]=-1*string_to_double(nb);
                nb="";

                for(int i =17; i<21; i++)
                {
                    nb=nb+ligne[i];
                }
                valeur[3]=string_to_double(nb);
                nb="";
                ref_points[compteur][0]= valeur[0];
               ref_points[compteur][1] = valeur[1];
                ref_points[compteur][2] = valeur[2];
                ref_points[compteur][3]= valeur[3];
                compteur++;

            }



        }
    }
    else cout<<"erreur ouverture";


}

void tri()
{
    bool b;
    int j;
    double tampon[4];

    double tab1[taille]= {0} ;
    double tab2[taille]= {0};
    double tab3[taille]= {0};
    double tab4[taille]= {0};
    for(int i =0; i<taille; i++)
    {
        tab1[i]=val1[i];
        tab2[i]=val2[i];
        tab3[i]=val3[i];
        tab4[i]=val4[i];

    }


    for (int i =1; i<taille; i++)
    {
        tampon[0]=tab1[i];
        tampon[1]=tab2[i];
        tampon[2]=tab3[i];
        tampon[3]=tab4[i];

        j=i-1;
        while((tab1[j]>tampon[0] ||
                (tab1[j]==tampon[0] && (tab2[j]>tampon[1] ||
                                        (tab2[j]==tampon[1] && (tab3[j]>tampon[2] ||
                                                (tab3[j]==tampon[2] && tab4[j]>tampon[3]) ) )))) && j>=0)
        {
            tab1[j+1]=tab1[j];
            tab2[j+1]=tab2[j];
            tab3[j+1]=tab3[j];
            tab4[j+1]=tab4[j];

            j--;
        }
        tab1[j+1]=tampon[0];
        tab2[j+1]=tampon[1];
        tab3[j+1]=tampon[2];
        tab4[j+1]=tampon[3];

    }


    //maj des valeurs des tableaux val
    for(int i =0; i<taille; i++)
    {
        val1[i]=tab1[i];
        val2[i]=tab2[i];
        val3[i]=tab3[i];
        val4[i]=tab4[i];

    }

    cout<<endl;
   // affichageTab();

}

void  ecriture(int [][])
{ofstream fichier(adresseSortie.c_str(), ios::out );
        for(int j=0; j<vect.size(); j++)
    {
        fichier<<vect[j].get1()[0]<<" "<<vect[j].get1()[1]
            <<"/"<<vect[j].get2()[0]<<" "<<vect[j].get2()[1]
            <<"/"<<vect[j].get3()[0]<<" "<<vect[j].get3()[1]
            <<"/"<<vect[j].get4()[0]<<" "<<vect[j].get4()[1]<<endl;
    }
                fichier.close();

}

int main(int argc, char* argv[])
{
    cout<<"debut"<<endl;
    creationTabDonnees();
    tri();
    cout<<endl;
    ecriture(vect);
    cout<<vect.size();

    return 0;
}
